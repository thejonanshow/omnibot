┌────────────────────────────────────────────────────────────────┐
│                  🤖 OMNIBOT STAGING CONFIG                     │
│                     Quick Reference Card                       │
└────────────────────────────────────────────────────────────────┘

📱 STAGING FRONTEND
   https://omnibot-ui-staging.pages.dev

🔌 SETTINGS (Click ⚙️ button)
   
   Router URL:
   https://omnibot-router-staging.jonanscheffler.workers.dev
   
   Shared Secret:
   [Get from .env file - SHARED_SECRET value]
   ⚠️  Never commit secrets to git!

──────────────────────────────────────────────────────────────────

🚀 DEPLOYMENT COMMANDS

   Deploy to Staging (default):
   $ ./deploy.sh
   
   Deploy to Production:
   $ ./deploy.sh production
   (requires typing: DEPLOY TO PRODUCTION)

──────────────────────────────────────────────────────────────────

✅ TESTING CHECKLIST

   □ Frontend loads
   □ Settings save
   □ Text chat works
   □ Voice input works
   □ LLM rotation functions
   □ Status updates correctly
   □ Mobile responsive
   □ Themes switch properly

──────────────────────────────────────────────────────────────────

🎨 THEME OPTIONS (in Settings)

   • Matrix (Green Terminal) - Default
   • Cyberpunk (Neon Pink/Cyan)
   • Tron Legacy (Electric Blue)
   • Ghost in the Shell (Holographic)
   • Modern Dark (Blue/Gray)
   ...and 9 more sci-fi themes!

──────────────────────────────────────────────────────────────────

🔧 USEFUL COMMANDS

   Run tests:
   $ npm test
   
   Watch staging logs:
   $ cd cloudflare-worker
   $ npx wrangler tail --env staging
   
   Rollback production:
   $ npx wrangler rollback --env production

──────────────────────────────────────────────────────────────────

📊 ENVIRONMENT URLS

   STAGING
   Frontend: https://omnibot-ui-staging.pages.dev
   Worker:   https://omnibot-router-staging.jonanscheffler.workers.dev
   
   PRODUCTION  
   Frontend: https://omni-agent-ui.pages.dev
   Worker:   https://omnibot-router.jonanscheffler.workers.dev

──────────────────────────────────────────────────────────────────

🎯 WORKFLOW

   1. Code changes → commit
   2. Run: ./deploy.sh (goes to staging)
   3. Test on staging frontend
   4. If OK: ./deploy.sh production
   5. Confirm with: DEPLOY TO PRODUCTION

──────────────────────────────────────────────────────────────────

💡 TIPS

   • Staging is always the default
   • Production requires explicit confirmation
   • Tests must pass before deployment
   • Each environment has isolated data
   • Use staging for all experiments
   • Never commit .env file to git

──────────────────────────────────────────────────────────────────

Print this or bookmark: STAGING-FRONTEND-CONFIG.md for full details
